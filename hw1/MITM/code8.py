from pwn import *
import hashlib

def numhash(n):
    return int(hashlib.sha512(str(n)).hexdigest(), 16)

def getMsg(connection):
    recv = connection.recv(timeout = 5)
    if recv == '':
        raise Exception("Time out!!!")
    msg = connection.recv(timeout = 5)
    if msg == '':
        raise Exception("Time out!!!")
    msg = int(msg[14:].split("G")[0][:-1])
    return msg

def getFlag(connection):
    msg = connection.recv(timeout = 5)
    if msg == '':
        raise Exception("Time out!!!")
    msg = int(msg[9:-1])
    return msg

def tryPassword(pwc):
    try:
        connection_1 = remote("140.112.31.109", 10002)
        connection_2 = remote("140.112.31.109", 10002)
        
        recvnum1 = None
        recvnum2 = None
        for i in range(password_size):
            num1 = int(getMsg(connection_1))
            num2 = int(getMsg(connection_2))
            if i != pwi:
                connection_1.sendline(str(num2))
                connection_2.sendline(str(num1))
            else:
                gp = pow(numhash(pwc), 2, p)
                connection_1.sendline(str(gp))
                connection_2.sendline(str(gp))
                recvnum1 = numhash(num1)
                recvnum2 = numhash(num2)
        
        flag1 = int(getFlag(connection_1))
        flag2 = int(getFlag(connection_2))
        connection_1.close()
        connection_2.close()
        if flag1 ^ recvnum1 == flag2 ^ recvnum2:
            print "MATCH! pws[%d] = %d" %(pwi, pwc) 
            password[pwi] = pwc
            print password
            return True
        else:
            return False
    except Exception as e:
        connection_1.close()
        connection_2.close()
        return tryPassword(pwc)

def crack(password):
    try:

        connection = remote("140.112.31.109", 10002)
        key = 0
        for i, pwd in enumerate(password):
            
            # Diffie Hellman and g is generated by the password
            # print 'Round', i+1
            
            g = pow(pwd, 2, p)
            
            A = int(getMsg(connection))
                        
            b = random.randint(2, p)
            B = pow(g, b ,p)
            # print "Sends: " + str(B)
            connection.sendline(str(B))

            # print "Receive: " + str(A)
            K = pow(A, b, p)
            key ^= numhash(K)

        flag = int(getFlag(connection))
        print hex(flag ^ key)[2:].decode("hex")
        connection.close()
    except Exception as e:
        connection.close()
        crack(password)

p = 262603487816194488181258352326988232210376591996146252542919605878805005469693782312718749915099841408908446760404481236646436295067318626356598442952156854984209550714670817589388406059285064542905718710475775121565983586780136825600264380868770029680925618588391997934473191054590812256197806034618157751903

password_size = 3
password = [None] * password_size
for pwi in range(password_size):
    if password[pwi] is not None:
        continue
    for pwc in range(1, 21):
        print "======Try password[%d] and pwc: %d=====" %(pwi, pwc)
        if tryPassword(pwc) == True:
            break

# password = [13, 19, 17]
password = [numhash(i) for i in password]
crack(password)